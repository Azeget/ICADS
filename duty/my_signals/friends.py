from duty.objects import dp, MySignalEvent
from duty.utils import find_mention_by_event
from microvk import VkApiResponseException


@dp.longpoll_event_register('+–¥—Ä', '+–¥—Ä—É–≥', '-–¥—Ä', '-–¥—Ä—É–≥')
@dp.my_signal_event_register('+–¥—Ä', '+–¥—Ä—É–≥', '-–¥—Ä', '-–¥—Ä—É–≥')
def change_friend_status(event: MySignalEvent) -> str:
    user_id = find_mention_by_event(event)
    if user_id:
        if event.command.startswith('-–¥—Ä'):
            try:
                status = event.api('friends.delete', user_id=user_id)
                if status.get('friend_deleted'): msg = "üíî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ –¥—Ä—É–∑–µ–π"
                elif status.get('out_request_deleted'): msg = "‚úÖ –ò—Å—Ö–æ–¥—è—â–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
                elif status.get('in_request_deleted'): msg = "‚úÖ –í—Ö–æ–¥—è—â–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞"
                elif status.get('suggestion_deleted'): msg = "‚úÖ –û—Ç–∫–ª–æ–Ω–µ–Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –¥—Ä—É–≥–∞"
                else: msg = "‚ùó –û—à–∏–±–∫–∞"
            except VkApiResponseException as e:
                msg = f"‚ùó –û—à–∏–±–∫–∞ VK ‚Ññ{e.error_code} {e.error_msg}"
        else:
            try:
                status = event.api('friends.add', user_id = user_id)
                if status == 1: msg = "‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞"
                elif status == 2: msg = "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω"
                else: msg = "‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ"
            except VkApiResponseException as e:
                if e.error_code == 174:
                    msg = "ü§î –ö—Ö–º , —Ç—ã —Å–µ–±—è –¥–æ–±–∞–≤–∏—Ç—å —Ö–æ—á–µ—à—å?"
                elif e.error_code == 175:
                    msg = "‚ùó –¢—ã –≤ –ß–° —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
                elif e.error_code == 176:
                    msg = "‚ùó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ß–°"
                else:
                    msg = f"‚ùó –û—à–∏–±–∫–∞: {e.error_msg}"
    else:
        msg = "‚ùó –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ"
    event.msg_op(2, msg)
    return "ok"


@dp.longpoll_event_register('+—á—Å', '-—á—Å')
@dp.my_signal_event_register('+—á—Å', '-—á—Å')
def ban_user(event: MySignalEvent) -> str:
    user_id = find_mention_by_event(event)
    if user_id:
        if event.command == '+—á—Å':
            try:
                if event.api('account.ban', owner_id=user_id) == 1:
                    msg = 'üò° –ó–∞–±–ª–æ–∫–µ—Ä–æ–≤–∞–ª'
            except VkApiResponseException as e:
                if e.error_msg.endswith('already blacklisted'):
                    msg = '‚ùó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –±–∞–Ω–µ'
                else:
                    msg = f'‚ùó –û—à–∏–±–∫–∞: {e.error_msg}'
        else:
            try:
                if event.api('account.unban', owner_id = user_id) == 1:
                    msg = 'üíö –†–∞–∑–±–ª–æ–∫–µ—Ä–æ–≤–∞–ª'
            except VkApiResponseException as e:
                if e.error_msg.endswith('not blacklisted'):
                    msg = 'üëåüèª –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –±–∞–Ω–µ'
                else:
                    msg = f'‚ùó –û—à–∏–±–∫–∞: {e.error_msg}'
    else:
        msg = "‚ùó –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ"
    event.msg_op(2, msg)
    return "ok"
